-- /// INITIAL TABLES ///
create table
  public.requests (
    id bigint generated by default as identity not null,
    wallet_addr text not null default ''::text,
    did_str text not null default ''::text,
    verifiable_cred jsonb not null default '{"No": "VC"}'::jsonb,
    request_status text not null default 'pending'::text,
    created_at timestamp with time zone not null default now(),
    usernetwork_info jsonb null default '{"ip_address": "No IP", "user_agent": "No User Agent", "location_lat": "No lat", "location_long": "No long", "user_language": "No Lang"}'::jsonb,
    requested_role text not null default 'user'::text,
    updated_at time without time zone null,
    constraint requests_pkey primary key (id),
    constraint requests_wallet_addr_key unique (wallet_addr),
    constraint requests_did_str_key unique (did_str),
    constraint requests_role_check check (
      (
        requested_role = any (
          array['device'::text, 'admin'::text, 'user'::text]
        )
      )
    ),
    constraint requests_request_status_check check (
      (
        request_status = any (
          array[
            'pending'::text,
            'approved'::text,
            'rejected'::text
          ]
        )
      )
    )
  ) tablespace pg_default;

--- Logs table
create table
  public.user_activity_logs (
    id bigint generated by default as identity not null,
    user_id uuid not null,
    activity text not null,
    type text not null,
    timestamp timestamp with time zone not null default now(),
    constraint user_activity_logs_pkey primary key (id),
    constraint user_activity_logs_user_id_fkey foreign key (user_id) references auth.users (id) on delete cascade
  ) tablespace pg_default;

-- create a view to read the auth.sessions table
create view
  public.sessions as
select
  sessions.id,
  sessions.user_id,
  sessions.created_at,
  sessions.updated_at,
  sessions.factor_id,
  sessions.aal,
  sessions.not_after,
  sessions.refreshed_at,
  sessions.user_agent,
  sessions.ip,
  sessions.tag
from
  auth.sessions;




